#!/usr/bin/env Rscript
library("optparse")

option_list = list(
  make_option(c("-f", "--file"), type="character", default=NULL, 
              help="Dataset file path", metavar="character"),
  make_option(c("-m", "--mode"), type="character", default="heatmap", 
              help="Mode to run script in [default= %default]. \n \t Available modes are: 'heatmap', 'dendrogram', 'general_h', & 'general_d'", metavar="character"),
  make_option(c("-c", "--cutoff"), type='double', default = 1.25E-02,
              help = 'Max dist of dendrogram multiplied by this value to make the cuts [default= %default]. \n \t If running in a general mode, this should be user set based on the data.', metavar ='double'),
  make_option(c("-g", "--clusteringmethod"), type="character", default = "ward.D2",
              help="method to use when making the clustering [default= %default]. \n \t Available methods are: 'ward.D', 'ward.D2', 'single', 'complete', 'average', 'mcquitty', 'median', or 'centroid'", metavar = 'charcter')
); 

opt_parser = OptionParser(option_list=option_list);
opt = parse_args(opt_parser);


if (is.null(opt$file)){
  print_help(opt_parser)
  stop("At least one argument must be supplied (input file).n", call.=FALSE)
}

## program...
if (opt$mode == 'heatmap'){
  library(RColorBrewer)
  library(sparcl)
  library(MASS)
  colfunc <- colorRampPalette(rev(brewer.pal(n=11, name = "BrBG")))
  mash_df <- as.matrix(read.csv(file = opt$file, sep = ',', header = T, row.names = 1))
  dis_mash <- as.dist(1-cor(t(mash_df)))
  hc_mash <- hclust(dis_mash, method = opt$clusteringmethod)
  
  out_prefix <- paste('_',opt$clusteringmethod, sep = '')
  
  outfile <- paste(strsplit(opt$file, '_distmat.csv')[[1]][1],'_r',out_prefix,'_heatmap.png', sep = '')
  
  png(outfile, units="in", width =30 , height = 15, res = 600)
  heatmap(mash_df, Rowv = as.dendrogram(hc_mash),Colv = 'Rowv', col = colfunc(200000), scale = 'none', labRow = FALSE, labCol = FALSE)
  dev.off()
  
 
  print(paste('Your cutoff for this dataset is', max(hc_mash$height*opt$cutoff), sep=' '))  
  mcl_mash <- cutree(hc_mash, h=max(hc_mash$height*opt$cutoff))
  clean_label <- as.matrix(hc_mash$labels)
  clean_group <- as.matrix(mcl_mash)
  
  
  outfile <- paste(strsplit(opt$file, '_distmat.csv')[[1]][1],'_r', out_prefix,'_',max(hc_mash$height*opt$cutoff),'_dendrogram.png', sep = '')
  png(outfile, units="in", width =30 , height = 15, res = 600)
  ColorDendrogram(hc_mash, y = mcl_mash, branchlength = 20)
  dev.off()
  
  outfile <- paste(strsplit(opt$file, '_distmat.csv')[[1]][1],'_r',out_prefix,'_clust_labels_cutoff_',max(hc_mash$height*opt$cutoff) ,sep = '')
  write.matrix(clean_group, file = outfile, sep = ',')
  outfile <- paste(strsplit(opt$file, '_distmat.csv')[[1]][1],'_r',out_prefix,'_clust_groups_cutoff_',max(hc_mash$height*opt$cutoff), sep = '')
  write.matrix(clean_label, file = outfile, sep = ',')
}

if (opt$mode == 'dendrogram'){
  library(sparcl)
  library(MASS)
  mash_df <- as.matrix(read.csv(file = opt$file, sep = ',', header = T, row.names = 1))
  dis_mash <- as.dist(1-cor(t(mash_df)))
  hc_mash <- hclust(dis_mash, method = opt$clusteringmethod)
 
  out_prefix <- paste('_',opt$clusteringmethod, sep = '')
  
  print(paste('Your cutoff for this dataset is', max(hc_mash$height*opt$cutoff), sep=' '))
  mcl_mash <- cutree(hc_mash, h=max(hc_mash$height*opt$cutoff))
  clean_label <- as.matrix(hc_mash$labels)
  clean_group <- as.matrix(mcl_mash)
  outfile <- paste(strsplit(opt$file, '_distmat.csv')[[1]][1],'_r',out_prefix,'_',max(hc_mash$height*opt$cutoff),'_dendrogram.png', sep = '')
  png(outfile, units="in", width =30 , height = 15, res = 600)
  ColorDendrogram(hc_mash, y = mcl_mash, branchlength = 20)
  dev.off()
  
  outfile <- paste(strsplit(opt$file, '_distmat.csv')[[1]][1],'_r',out_prefix,'_clust_labels_cutoff_',max(hc_mash$height*opt$cutoff) ,sep = '')
  write.matrix(clean_group, file = outfile, sep = ',')
  outfile <- paste(strsplit(opt$file, '_distmat.csv')[[1]][1],'_r',out_prefix,'_clust_groups_cutoff_',max(hc_mash$height*opt$cutoff), sep = '')
  write.matrix(clean_label, file = outfile, sep = ',')
}

if (opt$mode == 'general_h'){
  library(RColorBrewer)
  library(sparcl)
  library(MASS)
  colfunc <- colorRampPalette(rev(brewer.pal(n=11, name = "BrBG")))
  mash_df <- as.matrix(read.csv(file = opt$file, sep = ',', header = T, row.names = 1))
  dis_mash <- as.dist(1-cor(t(mash_df)))
  hc_mash <- hclust(dis_mash, method = opt$clusteringmethod)
  out_prefix <- paste('_',opt$clusteringmethod, sep = '')
  
  outfile <- paste(strsplit(opt$file, '_distmat.csv')[[1]][1],'_r',out_prefix,'_heatmap.png', sep = '')
  
  png(outfile, units="in", width =30 , height = 15, res = 600)
  heatmap(mash_df, Rowv = as.dendrogram(hc_mash),Colv = 'Rowv', col = colfunc(200000), scale = 'none', labRow = FALSE, labCol = FALSE)
  dev.off()
  out_prefix <- paste('_',opt$cutoff,'_',opt$clusteringmethod,'_', sep = '')
  outfile <- paste(strsplit(opt$file, '_distmat.csv')[[1]][1],'_r',out_prefix,'_dendrogram.png', sep = '')
  print(paste('Your cutoff for this dataset is', opt$cutoff, sep=' '))
  mcl_mash <- cutree(hc_mash, h=opt$cutoff)
  clean_label <- as.matrix(hc_mash$labels)
  clean_group <- as.matrix(mcl_mash)
  
  png(outfile, units="in", width =30 , height = 15, res = 600)
  ColorDendrogram(hc_mash, y = mcl_mash, branchlength = 20)
  dev.off()
  
  outfile <- paste(strsplit(opt$file, '_distmat.csv')[[1]][1],'_r',out_prefix,'_clust_labels_cutoff_',opt$cutoff ,sep = '')
  write.matrix(clean_group, file = outfile, sep = ',')
  outfile <- paste(strsplit(opt$file, '_distmat.csv')[[1]][1],'_r',out_prefix,'_clust_groups_cutoff_',opt$cutoff, sep = '')
  write.matrix(clean_label, file = outfile, sep = ',')
}

if (opt$mode == 'general_d'){
  library(sparcl)
  library(MASS)
  mash_df <- as.matrix(read.csv(file = opt$file, sep = ',', header = T, row.names = 1))
  dis_mash <- as.dist(1-cor(t(mash_df)))
  hc_mash <- hclust(dis_mash, method = opt$clusteringmethod)
  
  out_prefix <- paste('_',opt$cutoff,'_',opt$clusteringmethod,'_', sep = '')
  outfile <- paste(strsplit(opt$file, '.csv')[[1]][1],'_r',out_prefix,'_dendrogram.png', sep = '')
  print(paste('Your cutoff for this dataset is', opt$cutoff, sep=' '))
  mcl_mash <- cutree(hc_mash, h=opt$cutoff)
  clean_label <- as.matrix(hc_mash$labels)
  clean_group <- as.matrix(mcl_mash)
  
  png(outfile, units="in", width =30 , height = 15, res = 360)
  ColorDendrogram(hc_mash, y = mcl_mash, branchlength = 20)
  dev.off()
  
  outfile <- paste(strsplit(opt$file, '.csv')[[1]][1],'_r',out_prefix,'_clust_labels_cutoff_',opt$cutoff ,sep = '')
  write.matrix(clean_group, file = outfile, sep = ',')
  outfile <- paste(strsplit(opt$file, '.csv')[[1]][1],'_r',out_prefix,'_clust_groups_cutoff_',opt$cutoff, sep = '')
  write.matrix(clean_label, file = outfile, sep = ',')
}